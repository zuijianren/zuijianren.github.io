import{_ as a,o as e,c as o,O as l}from"./chunks/framework.a9f788d3.js";const g=JSON.parse('{"title":"反射","description":"","frontmatter":{},"headers":[],"relativePath":"modules/java/基础/反射.md"}'),s={name:"modules/java/基础/反射.md"},t=l('<h1 id="反射" tabindex="-1">反射 <a class="header-anchor" href="#反射" aria-label="Permalink to &quot;反射&quot;">​</a></h1><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><p>框架设计的灵魂, 是众多框架能够被提炼出来的前提</p><h2 id="简单介绍" tabindex="-1">简单介绍 <a class="header-anchor" href="#简单介绍" aria-label="Permalink to &quot;简单介绍&quot;">​</a></h2><h3 id="class-对象" tabindex="-1">Class 对象 <a class="header-anchor" href="#class-对象" aria-label="Permalink to &quot;Class 对象&quot;">​</a></h3><blockquote><p>提示:<br> 同一个字节码文件(*.class)在一次程序的运行过程中，只会被加载一次，无论通过哪一种方式获取到的class对象都是同一个</p></blockquote><ul><li><code>Class.forName(&quot;全类名&quot;)</code><blockquote><p>多用于配置文件, 将类名定义在配置文件中, 读取文件, 加载类</p></blockquote></li><li><code>类名.Class</code><blockquote><p>多用于参数的传递</p></blockquote></li><li><code>对象.getClass()</code><blockquote><p>多用于对象的获取字节码的方式</p></blockquote></li></ul><h3 id="成员变量" tabindex="-1">成员变量 <a class="header-anchor" href="#成员变量" aria-label="Permalink to &quot;成员变量&quot;">​</a></h3><h4 id="获取成员变量" tabindex="-1">获取成员变量 <a class="header-anchor" href="#获取成员变量" aria-label="Permalink to &quot;获取成员变量&quot;">​</a></h4><ul><li><code>Field[] getFields()</code><br> 获取所有public修饰的成员变量</li><li><code>Field getField(String name)</code><br> 获取指定的public修饰的成员变量</li><li><code>Field[] getDeclaredFields()</code><br> 获取所有的成员变量</li><li><code>Field getDeclaredField(String name)</code><br> 获取指定的成员变量</li></ul><h4 id="设置值" tabindex="-1">设置值 <a class="header-anchor" href="#设置值" aria-label="Permalink to &quot;设置值&quot;">​</a></h4><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="获取值" tabindex="-1">获取值 <a class="header-anchor" href="#获取值" aria-label="Permalink to &quot;获取值&quot;">​</a></h4><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">Object</span><span style="color:#A6ACCD;"> obj</span><span style="color:#89DDFF;">)</span></span></code></pre></div><h4 id="忽略访问权限修饰符的安全检查" tabindex="-1">忽略访问权限修饰符的安全检查 <a class="header-anchor" href="#忽略访问权限修饰符的安全检查" aria-label="Permalink to &quot;忽略访问权限修饰符的安全检查&quot;">​</a></h4><blockquote><p>暴力反射<br> 当访问private对象时，不写该语句会报错，无法访问</p></blockquote><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">setAccessible</span><span style="color:#89DDFF;">(true)</span></span></code></pre></div><h2 id="进阶" tabindex="-1">进阶 <a class="header-anchor" href="#进阶" aria-label="Permalink to &quot;进阶&quot;">​</a></h2><h3 id="getdeclaredmethods-和-getmethods-的区别" tabindex="-1"><code>getDeclaredMethods()</code> 和 <code>getMethods()</code> 的区别 <a class="header-anchor" href="#getdeclaredmethods-和-getmethods-的区别" aria-label="Permalink to &quot;`getDeclaredMethods()` 和 `getMethods()` 的区别&quot;">​</a></h3><ul><li><p><code>getDeclaredMethods()</code> 获取的是 <strong>类自身声明的所有方法</strong>，包含 public、protected 和 private方法。</p></li><li><p><code>getMethods()</code> 获取的是 <strong>类的所有公有方法</strong>，这就包括自身的所有 public 方法，和从基类继承的、从接口实现的所有 public 方法。</p></li></ul>',20),c=[t];function r(n,i,d,p,h,u){return e(),o("div",null,c)}const m=a(s,[["render",r]]);export{g as __pageData,m as default};
