import{_ as s,o as a,c as n,O as l}from"./chunks/framework.a9f788d3.js";const d=JSON.parse('{"title":"docker 部署","description":"","frontmatter":{},"headers":[],"relativePath":"modules/other/docker/docker部署.md"}'),p={name:"modules/other/docker/docker部署.md"},o=l(`<h1 id="docker-部署" tabindex="-1">docker 部署 <a class="header-anchor" href="#docker-部署" aria-label="Permalink to &quot;docker 部署&quot;">​</a></h1><h2 id="基础知识" tabindex="-1">基础知识 <a class="header-anchor" href="#基础知识" aria-label="Permalink to &quot;基础知识&quot;">​</a></h2><ul><li>RUN<br> 在镜像构建过程中执行命令, 并创建新的镜像层. 常用于安装软件包、构建应用程序等</li><li>CMD<br> 提供容器启动后默认执行的命令和参数, 但可以被 docker run 命令行参数覆盖. 每个 Dockerfile 只能有一个 CMD 指令(指一个镜像构建过程, 因此可能有多个 CMD 指令)</li></ul><p>总结: RUN 是在构建镜像时运行, CMD 是在容器启动时运行</p><h2 id="补充命令" tabindex="-1">补充命令 <a class="header-anchor" href="#补充命令" aria-label="Permalink to &quot;补充命令&quot;">​</a></h2><ul><li><p>查看镜像文件</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 将 镜像文件打包为 压缩包 解压缩查看即可(需要多次解压)</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">image</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">save</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nacos</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">本地位置/xx.tar</span></span></code></pre></div></li><li><p>查看容器文件(启动失败)</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cp</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器id:容器位置</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">本地位置</span></span></code></pre></div></li></ul><h2 id="构建镜像" tabindex="-1">构建镜像 <a class="header-anchor" href="#构建镜像" aria-label="Permalink to &quot;构建镜像&quot;">​</a></h2><p><a href="https://docs.docker.com/language/java/build-images/" target="_blank" rel="noreferrer">官方文档</a></p><h3 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h3><ol><li><p>准备一个 java 项目</p></li><li><p>创建 <code>dockerfile</code> 文件</p><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 指定基础镜像</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> eclipse-temurin:17-jdk-jammy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置镜像工作目录</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 为了使用安装依赖 复制以下文件到镜像中</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> .mvn/ .mvn</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> mvnw pom.xml ./</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 执行依赖解析 将依赖安装到image中</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> ./mvnw dependency:resolve</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将源代码复制到镜像中</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> src ./src</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置容器启动时需要执行到命令</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;./mvnw&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;spring-boot:run&quot;</span><span style="color:#A6ACCD;">]</span></span></code></pre></div></li><li><p>创建 <code>.dockerignore</code> 文件</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">target</span></span></code></pre></div></li></ol><h3 id="镜像管理" tabindex="-1">镜像管理 <a class="header-anchor" href="#镜像管理" aria-label="Permalink to &quot;镜像管理&quot;">​</a></h3><ol start="4"><li><p>创建镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--tag</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">spring-boot-demo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span></code></pre></div></li><li><p>查看 image 列表</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">images</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 此时应该可以看到上方创建的镜像 spring-boot-demo</span></span></code></pre></div></li><li><p>为当前镜像打上标签(表示为一个版本)</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tag</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">spring-boot-demo:latest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">spring-boot-demo:v1.0.0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 再次查看 image 列表 应该存在不同版本的两个镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">images</span></span></code></pre></div></li><li><p>移除镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rmi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">spring-boot-demo:v1.0.0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 再次查看 image 列表 </span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">images</span></span></code></pre></div></li></ol><h3 id="容器管理" tabindex="-1">容器管理 <a class="header-anchor" href="#容器管理" aria-label="Permalink to &quot;容器管理&quot;">​</a></h3><ol start="8"><li><p>作为容器启动镜像</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 容器在退出时自动删除</span></span>
<span class="line"><span style="color:#FFCB6B;">--rm</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 容器在后台运行，并返回容器 ID</span></span>
<span class="line"><span style="color:#FFCB6B;">-d</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将容器的 8080 端口映射到主机的 8080 端口</span></span>
<span class="line"><span style="color:#FFCB6B;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8080</span><span style="color:#C3E88D;">:8080</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 为容器指定一个名称 这里的名称是 &quot;springboot-server&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">springboot-server</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 要运行的 Docker 镜像的名称</span></span>
<span class="line"><span style="color:#FFCB6B;">spring-boot-demo</span></span></code></pre></div></li><li><p>查看容器</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 查看所有容器</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-a</span></span></code></pre></div></li><li><p>停止容器</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">stop</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">springboot-server</span></span></code></pre></div></li><li><p>重启容器</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 如果启动容器时 有配置 --rm 参数 则无法重启 因为容器退出后被自动删除了</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">restart</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">springoot-server</span></span></code></pre></div></li></ol><h3 id="创建-volume" tabindex="-1">创建 volume <a class="header-anchor" href="#创建-volume" aria-label="Permalink to &quot;创建 volume&quot;">​</a></h3><ol start="12"><li><p>创建 mysql 存储数据的 volume</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">volume</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql_data</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">volume</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql_config</span></span></code></pre></div></li></ol><h3 id="创建-network" tabindex="-1">创建 network <a class="header-anchor" href="#创建-network" aria-label="Permalink to &quot;创建 network&quot;">​</a></h3><ol start="13"><li><p>创建 mysql 网络</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysqlnet</span></span></code></pre></div></li></ol><h3 id="使用-volumn-和-network-启动容器" tabindex="-1">使用 volumn 和 network 启动容器 <a class="header-anchor" href="#使用-volumn-和-network-启动容器" aria-label="Permalink to &quot;使用 volumn 和 network 启动容器&quot;">​</a></h3><ol start="14"><li><p>启动 mysql 容器</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql_data:/var/lib/mysql</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql_config:/etc/mysql/conf.d</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysqlnet</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql-server</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_USER=test</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_PASSWORD=test</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_ROOT_PASSWORD=root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_DATABASE=springboot</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3306</span><span style="color:#C3E88D;">:3306</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql:8.0</span></span></code></pre></div></li><li><p>重新创建镜像 并 启动</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--tag</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">spring-boot-demo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 启动镜像  下列 MYSQL_URL 为 yml 文件中配置读取的环境变量 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 即 \`spring.datasource.url: \${MYSQL_URL:jdbc:mysql://localhost/springboot}\`</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> \\                 </span></span>
<span class="line"><span style="color:#FFCB6B;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">springboot-server</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">--network </span><span style="color:#C3E88D;">mysqlnet</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-e </span><span style="color:#C3E88D;">MYSQL_URL=jdbc:mysql://mysql-server/springboot</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">-p </span><span style="color:#F78C6C;">8080</span><span style="color:#C3E88D;">:8080</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">spring-boot-demo</span></span></code></pre></div></li></ol><h3 id="进阶配置-dockerfile" tabindex="-1">进阶配置 dockerfile <a class="header-anchor" href="#进阶配置-dockerfile" aria-label="Permalink to &quot;进阶配置 dockerfile&quot;">​</a></h3><ol start="16"><li><p>更新 dockerfile 文件配置 添加阶段配置</p><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 添加一个标签 以便在其他构建阶段中引用这个构建阶段</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># base 阶段</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> eclipse-temurin:8-jdk-jammy </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> base</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /app</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> .mvn/ .mvn</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> mvnw pom.xml ./</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> ./mvnw dependency:resolve</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> src ./src</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> base </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> test</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 使用 RUN 命令来确保在镜像创建过程中执行测试 失败时停止构建</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;./mvnw&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;test&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># development 阶段</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> base </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> development</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 启动项目  并额外添加了 jvm 的调试配置</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;./mvnw&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;spring-boot:run&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;-Dspring-boot.run.jvmArguments=&#39;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000&#39;&quot;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># build 阶段</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> base </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> build</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 打包项目</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> ./mvnw package</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># production 阶段</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> eclipse-temurin:8-jre-jammy </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> production</span></span>
<span class="line"><span style="color:#F78C6C;">EXPOSE</span><span style="color:#A6ACCD;"> 8080</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 未定义打包名情况下写法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">#COPY --from=build /app/target/springboot-server-*.jar /spring-petclinic.jar</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> --from=build /app/target/springboot-server.jar /springboot-server.jar</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;java&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;-Djava.security.egd=file:/dev/./urandom&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;-jar&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;/springboot-server.jar&quot;</span><span style="color:#A6ACCD;">]</span></span></code></pre></div></li></ol><h3 id="创建-docker-compose" tabindex="-1">创建 docker-compose <a class="header-anchor" href="#创建-docker-compose" aria-label="Permalink to &quot;创建 docker-compose&quot;">​</a></h3><ol start="17"><li><p>创建 docker-compose.dev.yml 文件</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">version</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">3.8</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">services</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">springboot-server</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 此处选择使用 build 生成 image</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">build</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">.</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;"># 此处为 dockerfile 文件中声明的阶段</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">development</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">8000:8000</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">8080:8080</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">SERVER_PORT=8080</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_URL=jdbc:mysql://mysql-server/springboot</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./:/app</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">depends_on</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql-server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mysql-server</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 此处选择直接指定 image</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">image</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql:8.0</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">ports</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3306:3306</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">environment</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_ROOT_PASSWORD=root</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_ALLOW_EMPTY_PASSWORD=true</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_USER=test</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_PASSWORD=test</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MYSQL_DATABASE=springboot</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql_data:/var/lib/mysql</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mysql_config:/etc/mysql/conf.d</span></span>
<span class="line"><span style="color:#F07178;">volumes</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mysql_data</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">mysql_config</span><span style="color:#89DDFF;">:</span></span></code></pre></div></li></ol><h3 id="启动-docker-compose" tabindex="-1">启动 docker compose <a class="header-anchor" href="#启动-docker-compose" aria-label="Permalink to &quot;启动 docker compose&quot;">​</a></h3><ol start="18"><li><p>启动 docker compose</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker-compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker-compose.dev.yml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--build</span></span></code></pre></div></li></ol>`,26),e=[o];function t(c,r,C,y,i,D){return a(),n("div",null,e)}const F=s(p,[["render",t]]);export{d as __pageData,F as default};
