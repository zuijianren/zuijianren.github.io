import{_ as a,o as e,c as t,O as o}from"./chunks/framework.a9f788d3.js";const b=JSON.parse('{"title":"IO","description":"","frontmatter":{},"headers":[],"relativePath":"modules/java/基础/IO.md"}'),r={name:"modules/java/基础/IO.md"},l=o('<h1 id="io" tabindex="-1">IO <a class="header-anchor" href="#io" aria-label="Permalink to &quot;IO&quot;">​</a></h1><h2 id="输入-输出的基本概念" tabindex="-1">输入/输出的基本概念 <a class="header-anchor" href="#输入-输出的基本概念" aria-label="Permalink to &quot;输入/输出的基本概念&quot;">​</a></h2><ul><li>input<br> 从文件输入到内存</li><li>output<br> 从内存输出到文档</li></ul><h2 id="字节流" tabindex="-1">字节流 <a class="header-anchor" href="#字节流" aria-label="Permalink to &quot;字节流&quot;">​</a></h2><blockquote><p>以字节的形式处理数据</p></blockquote><h2 id="字符流" tabindex="-1">字符流 <a class="header-anchor" href="#字符流" aria-label="Permalink to &quot;字符流&quot;">​</a></h2><blockquote><p>以字符的形式处理数据</p></blockquote><h2 id="缓冲流" tabindex="-1">缓冲流 <a class="header-anchor" href="#缓冲流" aria-label="Permalink to &quot;缓冲流&quot;">​</a></h2><p>对字节字符等常用流的包装</p>',9),i=[l];function n(c,s,h,d,_,u){return e(),t("div",null,i)}const m=a(r,[["render",n]]);export{b as __pageData,m as default};
