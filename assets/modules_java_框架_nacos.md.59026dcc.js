import{_ as s,o as a,c as n,O as l}from"./chunks/framework.a9f788d3.js";const F=JSON.parse('{"title":"nacos","description":"","frontmatter":{},"headers":[],"relativePath":"modules/java/框架/nacos.md"}'),o={name:"modules/java/框架/nacos.md"},p=l(`<h1 id="nacos" tabindex="-1">nacos <a class="header-anchor" href="#nacos" aria-label="Permalink to &quot;nacos&quot;">​</a></h1><h2 id="docker-部署" tabindex="-1">docker 部署 <a class="header-anchor" href="#docker-部署" aria-label="Permalink to &quot;docker 部署&quot;">​</a></h2><blockquote><p>对于 win, linux 系统, nacos 官方提供了 docker 镜像进行部署, 因此, 此处忽略 但是, 对于 MAC 系统, 使用镜像会报错 不支持 arm64 (个人对docker属于一知半解的情况, 不是说docker可以解决部署环境问题吗? 为什么还有这种屁事?) 以下是打包 docker 镜像的笔记</p></blockquote><ol><li><p>下载编译后的压缩包 <a href="https://nacos.io/zh-cn/docs/v2/quickstart/quick-start.html" target="_blank" rel="noreferrer">官网地址</a></p></li><li><p>解压</p></li><li><p>在解压目录中, 创建 dockerfile 文件</p><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 指定基础镜像(nacos运行, 需要java环境)</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> eclipse-temurin:8-jre-jammy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置镜像工作目录</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将源代码复制到镜像中</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> . .</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置容器启动时需要执行到命令</span></span>
<span class="line"><span style="color:#F78C6C;">CMD</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;/app/bin/startup.sh&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;-m&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;standalone&quot;</span><span style="color:#A6ACCD;">]</span></span></code></pre></div></li><li><p>修改 <code>startup.sh</code> 文件</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 前面内容不变 略</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 此处 主要是 将启动方式修改为 前台运行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 后台运行 会导致 容器启动后 立刻退出 (开始我还以为配置错误导致启动报错后容器退出 日志空空如也 排查了半天 无语)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$JAVA_OPT_EXT_FIX</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]];</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">&quot;</span><span style="color:#A6ACCD;">$JAVA</span><span style="color:#FFCB6B;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">JAVA_OPT</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nacos.nacos</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">BASE_DIR</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/logs/start.out</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">2&gt;&amp;1</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">&quot;</span><span style="color:#A6ACCD;">$JAVA</span><span style="color:#FFCB6B;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$JAVA_OPT_EXT_FIX</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">JAVA_OPT</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nacos.nacos</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">BASE_DIR</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">/logs/start.out</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">2&gt;&amp;1</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span></code></pre></div></li><li><p>创建镜像并启动容器</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建镜像</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nacos</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 启动容器  映射 8848 端口 即可</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8848</span><span style="color:#C3E88D;">:8848</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">9848</span><span style="color:#C3E88D;">:9848</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nacos-server</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">nacos</span></span></code></pre></div></li></ol>`,4),t=[p];function e(c,r,C,y,D,A){return a(),n("div",null,t)}const d=s(o,[["render",e]]);export{F as __pageData,d as default};
