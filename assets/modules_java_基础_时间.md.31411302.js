import{_ as a,o as s,c as e,O as l}from"./chunks/framework.a9f788d3.js";const A=JSON.parse('{"title":"时间","description":"","frontmatter":{},"headers":[],"relativePath":"modules/java/基础/时间.md"}'),n={name:"modules/java/基础/时间.md"},o=l(`<h1 id="时间" tabindex="-1">时间 <a class="header-anchor" href="#时间" aria-label="Permalink to &quot;时间&quot;">​</a></h1><h2 id="相关概念" tabindex="-1">相关概念 <a class="header-anchor" href="#相关概念" aria-label="Permalink to &quot;相关概念&quot;">​</a></h2><h3 id="时刻" tabindex="-1">时刻 <a class="header-anchor" href="#时刻" aria-label="Permalink to &quot;时刻&quot;">​</a></h3><p>所有计算机系统内部都用一个整数表示时刻<br> 这个整数是距离格林尼治标准时间 <code>1970年1月1日0时0分0秒</code> 的毫秒数, 可以理解时刻就是绝对时间</p><blockquote><p>与时区无关, 不同时区对同一时刻的解读(即年月日时分秒)是不一样的</p></blockquote><h3 id="时区" tabindex="-1">时区 <a class="header-anchor" href="#时区" aria-label="Permalink to &quot;时区&quot;">​</a></h3><p>同一时刻, 世界上各个地区的时间可能是不一样的, 具体时间与时区有关<br> 一共有 24 个时区, 英国格林尼治是 0 时区, 北京是东八区, 也就是说格林尼治凌晨 1 点, 北京是早上 9 点</p><h3 id="年历" tabindex="-1">年历 <a class="header-anchor" href="#年历" aria-label="Permalink to &quot;年历&quot;">​</a></h3><p>中国有公历和农历之分, 公历和农历都是年历, 不同的年历, 一年有多少月, 每月有多少天, 甚至一天有多少小时, 这些可能都是不一样的 通常只计算公历</p><h2 id="相关类" tabindex="-1">相关类 <a class="header-anchor" href="#相关类" aria-label="Permalink to &quot;相关类&quot;">​</a></h2><blockquote><p><code>Date</code> 是 比较过期的时间类，线程不安全</p><p><code>LocalDateTime</code> 是 新开发的时间类，线程安全，不允许修改，只允许创建新对象 即 调用修改方法后, 原数据并不会改变</p><p><code>ZoneDateTime</code> 使用于考虑国际化的情况，如果不考虑，则使用 <code>LocalDateTime</code></p></blockquote><h3 id="instant-时刻" tabindex="-1">Instant（时刻） <a class="header-anchor" href="#instant-时刻" aria-label="Permalink to &quot;Instant（时刻）&quot;">​</a></h3><blockquote><p>java.time.Instant</p></blockquote><p>不直接对应年月日信息, 需要通过时区转换</p><h3 id="localdatetime-localdate-localtime-重要" tabindex="-1">LocalDateTime/LocalDate/LocalTime (重要) <a class="header-anchor" href="#localdatetime-localdate-localtime-重要" aria-label="Permalink to &quot;LocalDateTime/LocalDate/LocalTime (重要)&quot;">​</a></h3><blockquote><p>java.time.LocalDate</p></blockquote><p>表示与时区无关的日期和时间信息</p><h4 id="常用方法" tabindex="-1">常用方法 <a class="header-anchor" href="#常用方法" aria-label="Permalink to &quot;常用方法&quot;">​</a></h4><ul><li>withXxx 方法<br> 赋值 Xxx 属性，其余不变，返回修改后的对象（原对象不改变）</li><li>plusXxx 方法<br> 增大 Xxx 属性</li><li>minusXxx 方法<br> 减小 Xxx 属性</li></ul><h3 id="zoneddatetime" tabindex="-1">ZonedDateTime <a class="header-anchor" href="#zoneddatetime" aria-label="Permalink to &quot;ZonedDateTime&quot;">​</a></h3><blockquote><p>java.time.ZonedDateTime</p></blockquote><p>表示特定时区的日期和时间</p><h4 id="zoneid-zoneoffset-时区" tabindex="-1">ZoneId/ZoneOffset（时区） <a class="header-anchor" href="#zoneid-zoneoffset-时区" aria-label="Permalink to &quot;ZoneId/ZoneOffset（时区）&quot;">​</a></h4><blockquote><p>java.time.ZoneId</p></blockquote><p>表示时区</p><h3 id="date" tabindex="-1">Date <a class="header-anchor" href="#date" aria-label="Permalink to &quot;Date&quot;">​</a></h3><blockquote><p>java.util.Date</p></blockquote><p>常用于对应数据库中<code>datetime</code>字段的属性</p><h2 id="类转换" tabindex="-1">类转换 <a class="header-anchor" href="#类转换" aria-label="Permalink to &quot;类转换&quot;">​</a></h2><h3 id="字符串-转-localdatetime" tabindex="-1">字符串 转 LocalDateTime <a class="header-anchor" href="#字符串-转-localdatetime" aria-label="Permalink to &quot;字符串 转 LocalDateTime&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">DateTimeFormatter</span><span style="color:#A6ACCD;"> dateTimeFormatter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DateTimeFormatter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ofPattern</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yyyy/MM/dd HH:mm:ss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">LocalDateTime</span><span style="color:#A6ACCD;"> localDateTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> LocalDateTime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2020/01/01 11:00:00</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> dateTimeFormatter</span><span style="color:#89DDFF;">);</span></span></code></pre></div><h3 id="localdatetime-转-字符串" tabindex="-1">LocalDateTime 转 字符串 <a class="header-anchor" href="#localdatetime-转-字符串" aria-label="Permalink to &quot;LocalDateTime 转 字符串&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">DateTimeFormatter</span><span style="color:#A6ACCD;"> dateTimeFormatter </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DateTimeFormatter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ofPattern</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yyyy/MM/dd HH:mm:ss</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> format </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> dateTimeFormatter</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LocalDateTime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">now</span><span style="color:#89DDFF;">());</span></span></code></pre></div><h3 id="字符串-转-date" tabindex="-1">字符串 转 Date <a class="header-anchor" href="#字符串-转-date" aria-label="Permalink to &quot;字符串 转 Date&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">SimpleDateFormat</span><span style="color:#A6ACCD;"> simpleDateFormat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SimpleDateFormat</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yyyy-MM-dd</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> simpleDateFormat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2020-10-01</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span></code></pre></div><h3 id="date-转-字符串" tabindex="-1">Date 转 字符串 <a class="header-anchor" href="#date-转-字符串" aria-label="Permalink to &quot;Date 转 字符串&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">SimpleDateFormat</span><span style="color:#A6ACCD;"> simpleDateFormat </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SimpleDateFormat</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yyyy-MM-dd</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> simpleDateFormat</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">format</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">);</span></span></code></pre></div><h3 id="date-转-localdatetime" tabindex="-1">Date 转 LocalDateTime <a class="header-anchor" href="#date-转-localdatetime" aria-label="Permalink to &quot;Date 转 LocalDateTime&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. 获取系统的时区</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. 通过Date对象获取时刻</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. 通过时刻和时区获取特定时区的日期和时间</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. 将上述特定时区的日期和时间转换为LocalDateTime对象</span></span>
<span class="line"><span style="color:#C792EA;">ZoneId</span><span style="color:#A6ACCD;"> zoneId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ZoneId</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">systemDefault</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">Instant</span><span style="color:#A6ACCD;"> instant </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toInstant</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">ZonedDateTime</span><span style="color:#A6ACCD;"> zonedDateTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> instant</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">atZone</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">zoneId</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">LocalDateTime</span><span style="color:#A6ACCD;"> dateTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> zonedDateTime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toLocalDateTime</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> dateTime</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="localdatetime-转-date" tabindex="-1">LocalDateTime 转 Date <a class="header-anchor" href="#localdatetime-转-date" aria-label="Permalink to &quot;LocalDateTime 转 Date&quot;">​</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 1. 获取系统的时区</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. 通过LocalDateTime对象获取特定时区的日期和时间</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. 将特定时区的日期和时间转换为时刻</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. 通过时刻获取Date对象</span></span>
<span class="line"><span style="color:#C792EA;">ZoneId</span><span style="color:#A6ACCD;"> zoneId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ZoneId</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">systemDefault</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">ZonedDateTime</span><span style="color:#A6ACCD;"> zonedDateTime </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> localDateTime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">atZone</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">zoneId</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">Instant</span><span style="color:#A6ACCD;"> instant </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> zonedDateTime</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toInstant</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">Date</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">instant</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> date</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="时区相关配置" tabindex="-1">时区相关配置 <a class="header-anchor" href="#时区相关配置" aria-label="Permalink to &quot;时区相关配置&quot;">​</a></h2><h3 id="数据库时区配置" tabindex="-1">数据库时区配置 <a class="header-anchor" href="#数据库时区配置" aria-label="Permalink to &quot;数据库时区配置&quot;">​</a></h3><p>经常可以看到代码中, 存在对使用 Mysql 数据库的程序进行时区配置的代码, 如下:</p><div class="language-yml"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">url</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jdbc:mysql://82.156.34.243:3306/spring_demo?serverTimezone=GMT%2B12</span></span></code></pre></div><p>这段配置的具体含义: 声明当前使用的数据库的时区, 例如</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">当前数据库中存储的时间为: \`GMT\`时区的 \`2022-06-01 15:00:00\`</span></span>
<span class="line"><span style="color:#A6ACCD;">此时, 声明当前使用的时区为: \`GMT+12\`</span></span>
<span class="line"><span style="color:#A6ACCD;">程序本身默认的时区为: \`GMT+8\`</span></span>
<span class="line"><span style="color:#A6ACCD;">那么时间减去4个小时的时间差, 程序获取到的时间为: \`2022-06-01 11:00:00\`</span></span></code></pre></div><h3 id="jsonformat时区配置" tabindex="-1">JsonFormat时区配置 <a class="header-anchor" href="#jsonformat时区配置" aria-label="Permalink to &quot;JsonFormat时区配置&quot;">​</a></h3><p>为了处理时间转字符串的需求, jackson 提供了一个 <code>JsonFormat</code> 注解, 其中有一个 <code>timezone</code> 字段, 用于处理时区的转换, 其逻辑和上方类似, 同样是根据当前程序的默认时区, 以及配置的时区, 将时间处理为对应的时间</p><blockquote><p>tips: <code>timezone</code> 字段, 对于 <code>LocalDateTime</code> 等类型无效, 因为这些类型本就对应本地时间, 该字段仅对 <code>Date</code> 类型有效</p></blockquote><p>例如:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">当前程序获取到的时间为: \`2022-06-01 11:00:00\`</span></span>
<span class="line"><span style="color:#A6ACCD;">程序本身默认的时区为: \`GMT+8\`</span></span>
<span class="line"><span style="color:#A6ACCD;">使用 \`timezone\` 字段, 声明目标时区为: \`GMT\`</span></span>
<span class="line"><span style="color:#A6ACCD;">那么, 程序最终获取到的时间为: \`2022-06-01 03:00:00\`</span></span></code></pre></div><p>当连接没有声明时区时, 则默认以当前程序的时区, 作为数据库的时区, 此时, 两者查询的时间没有时间差, 程序获取的结果与数据库中存储的数据一致</p>`,53),t=[o];function p(c,r,i,D,y,d){return s(),e("div",null,t)}const m=a(n,[["render",p]]);export{A as __pageData,m as default};
