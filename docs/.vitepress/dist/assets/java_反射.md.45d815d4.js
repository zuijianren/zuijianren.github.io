import{_ as e,c as o,o as a,O as t}from"./chunks/framework.5a84fa57.js";const _=JSON.parse('{"title":"反射","description":"","frontmatter":{},"headers":[],"relativePath":"java/反射.md"}'),l={name:"java/反射.md"},c=t('<h1 id="反射" tabindex="-1">反射 <a class="header-anchor" href="#反射" aria-label="Permalink to &quot;反射&quot;">​</a></h1><h2 id="基恩概念" tabindex="-1">基恩概念 <a class="header-anchor" href="#基恩概念" aria-label="Permalink to &quot;基恩概念&quot;">​</a></h2><p>框架设计的灵魂</p><h2 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">​</a></h2><h3 id="获取-class-对象" tabindex="-1">获取 Class 对象 <a class="header-anchor" href="#获取-class-对象" aria-label="Permalink to &quot;获取 Class 对象&quot;">​</a></h3><blockquote><p>提示: 同一个字节码文件(*.class)在一次程序的运行过程中，只会被加载一次，无论通过哪一种方式获取到的class对象都是同一个</p></blockquote><ul><li><code>Class.forName(&quot;全类名&quot;)</code><blockquote><p>多用于配置文件, 将类名定义在配置文件中, 读取文件, 加载类</p></blockquote></li><li><code>类名.Class</code><blockquote><p>多用于参数的传递</p></blockquote></li><li><code>对象.getClass()</code><blockquote><p>多用于对象的获取字节码的方式</p></blockquote></li></ul><h3 id="获取成员变量" tabindex="-1">获取成员变量 <a class="header-anchor" href="#获取成员变量" aria-label="Permalink to &quot;获取成员变量&quot;">​</a></h3><ul><li><p>获取成员变量</p><ul><li><code>Field[] getFields()</code> 获取所有public修饰的成员变量</li><li><code>Field getField(String name)</code> 获取指定的public修饰的成员变量</li><li><code>Field[] getDeclaredFields()</code> 获取所有的成员变量</li><li><code>Field getDeclaredField(String name)</code> 获取指定的成员变量</li></ul></li><li><p>设置值 <code>set(Object obj, Object obj)</code></p></li><li><p>获取值 <code>get(Object obj)</code></p></li><li><p>忽略访问权限修饰符的安全检查 <code>setAccessible(true)</code></p><blockquote><p>暴力反射(当访问private对象时，不写该语句会报错，无法访问)</p></blockquote></li></ul><h2 id="进阶" tabindex="-1">进阶 <a class="header-anchor" href="#进阶" aria-label="Permalink to &quot;进阶&quot;">​</a></h2><h3 id="getdeclaredmethods-和-getmethods-的区别" tabindex="-1"><code>getDeclaredMethods()</code> 和 <code>getMethods()</code> 的区别 <a class="header-anchor" href="#getdeclaredmethods-和-getmethods-的区别" aria-label="Permalink to &quot;`getDeclaredMethods()` 和 `getMethods()` 的区别&quot;">​</a></h3><ul><li><p><code>getDeclaredMethods()</code> 获取的是<strong>类自身声明的所有方法</strong>，包含 public、protected 和 private方法。</p></li><li><p><code>getMethods()</code> 获取的是<strong>类的所有公有方法</strong>，这就包括自身的所有 public 方法，和从基类继承的、从接口实现的所有 public 方法。</p></li></ul>',12),d=[c];function i(s,r,h,n,u,p){return a(),o("div",null,d)}const q=e(l,[["render",i]]);export{_ as __pageData,q as default};
